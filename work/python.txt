------------------------------------------------------------------------------------------
---------------------Escape Sequence used in Python Programming Language---------------


Escape Sequence	          Description

\\	                      Backslash (\)
\'	                      Single quote (')
\"	                      Double quote (")
\n	                      Newline (line break)
\r	                      Carriage return
\t	                      Horizontal tab
\b	                      Backspace
\f	                      Form feed
\v	                      Vertical tab
\a	                      Bell/alert (may not work on all systems)
\0	                      Null character
\N{name}	              Unicode character by its name (e.g., \N{GREEK SMALL LETTER PI} → π)
\uXXXX	                  Unicode character with 16-bit hex value (e.g., \u03A9 → Ω)
\UXXXXXXXX	              Unicode character with 32-bit hex value
\xhh	                  Character with hex value (e.g., \x41 → A)
\ooo	                  Character with octal value (e.g., \101 → A)

------------------------------------------------------------------------------------------------

                  Selection(Conditional) Statements in Python

In python we don't need to write condition in (), we just write the condition and add colon " : "
after the condition to further proceed.
In python we use " elif " for "else-if".

Example:    if a == 10:
                print("Value is : ", a)
            elif a == 5:
                print("Value is : ", a)
            else:
                print("Value is : ", b)        

-------------------------------------------------------------------------------------------------

 --------------------- Match Statement in Python -----------------------

 In python we use match statement to compare values just like we use switch statement in C++.
 We use match keyword just before the variable that we are comparing, we use cases, and " case _ "
 for defalult execution if the value of variable doesn't match with the case value.
 
-------------------------------------------------------------------------------------------------

 --------------------- For Loop in Python -----------------------

A for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, 
a set, or a string).To loop through a set of code a specified number of times, we can use the 
range() function. You can see the example in the 'practice.py" file.

-------------------------------------------------------------------------------------------------

--------------------- break and continue statements in Python -----------------------

With the "break" statement we can stop the loop before it has looped through all the items.
With the "continue" statement we can stop the current iteration of the loop, and continue with 
the next, in simple words we just skip them.

-------------------------------------------------------------------------------------------------
------------------------ While Loop in Python --------------------------

With the while loop we can execute a set of statements as long as a condition is true.

------------------------------------------------------------------------------------------------
---------------------- Functions in Pyhton -----------------------

In Python a function is defined using the def keyword:
                     
                    def my_function():
                    print("Hello from a function")

To call a function, use the function name followed by parenthesis:

                    my_function()

Arguments are specified after the function name, inside the parentheses. You can add as many arguments as you want, 
just separate them with a comma.

                   def my_function(fname):
                   print(fname + " Refsnes")

                   my_function("Emil")
                   my_function("Raja")
                   my_function("Coding-Raja")

----------------------------------------------------------------------------------------------------------
------------------------------- Decorators in Python -----------------------------

Decorators are a way to modify or enhance functions without changing their actual code. They "wrap" existing 
functions to add new functionality.
Example:

                            def changecase(func):
                              def myinner():
                                return func().upper()
                              return myinner

                            @changecase
                            def myfunction():
                              return "Hello Sally"

                            print(myfunction())

You can name the inner function whatever you want. The name myinner() is arbitrary and can be changed to anything 
that follows Python's naming rules.